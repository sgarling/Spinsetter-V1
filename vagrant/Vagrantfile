# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'rbconfig'
IS_WINDOWS = (RbConfig::CONFIG['host_os'] =~ /mswin|mingw|cygwin/) ? true : false

Vagrant::Config.run do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "precise-2013-02-09"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "https://s3-us-west-2.amazonaws.com/squishy.vagrant-boxes/precise64_squishy_2013-02-09.box"

  # This can be set to the host name you wish the guest machine to have.
  config.vm.host_name = "spin"
  
  # Requires vagrant-hostmaster
  # 
  # Manage custom /etc/hosts entries on both the host OS and guest VMs
  # config.hosts.name = "proj-name.local"

  # Boot with a GUI so you can see the screen. (Default is headless)
  # config.vm.boot_mode = :gui

  # Assign this VM to a host-only network IP, allowing you to access it
  # via the IP. Host-only networks can talk to the host machine as well as
  # any other machines on the same network, but cannot be accessed (through this
  # network interface) by any external networks.
  config.vm.network :hostonly, "192.168.33.10"

  # Assign this VM to a bridged network, allowing you to connect directly to a
  # network using the host's network device. This makes the VM appear as another
  # physical device on your network.
  # config.vm.network :bridged

  # Forward a port from the guest to the host, which allows for outside
  # computers to access the VM, whereas host only networking does not.
  config.vm.forward_port 3000, 3000

  # Share an additional folder to the guest VM. The first argument is
  # an identifier, the second is the path on the guest to mount the
  # folder, and the third is the path on the host to the actual folder.
  config.vm.share_folder "spin", "/home/vagrant/spin", "../", :nfs => !IS_WINDOWS

  # Allows symlinks to be created in the shared folder (ex: node_modules).
  config.vm.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/proj-name", "1"]

  # Increase the memory available the VM.
  config.vm.customize ["modifyvm", :id, "--memory", 2048]

  # Requires vagrant-vbguest plugin
  #
  # set auto_update to false, if you do NOT want to check the correct  
  # VirtualBox guest additions version when booting this machine
  # config.vbguest.auto_update = false

  # Enable provisioning with chef solo, specifying a cookbooks path, roles
  # path, and data_bags path (all relative to this Vagrantfile), and adding 
  # some recipes and/or roles.
  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = "cookbooks"
    #chef.roles_path = "roles"
    #chef.data_bags_path = "data_bags"
    chef.add_recipe "apt"
    chef.add_recipe "build-essential"
    chef.add_recipe "nodejs"
    chef.add_recipe "nodejs::npm"
    chef.add_recipe "vim"
    chef.add_recipe "nginx"
    chef.add_recipe "git"
    # chef.add_role "web"

    chef.json = {
      "nodejs" => {
        "version" => "0.10.1"
      } 
    }
  end
end
